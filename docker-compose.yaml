services:
    website-backend:
        build:
          context: .
          dockerfile: backend/Dockerfile
        container_name: website-service
        ports:
        - "8000:8000"
        environment:
          - SCHEMA_HTTP__ADDRESS=0.0.0.0:8000
          - SCHEMA_POSTGRES__HOST=postgres
          - SCHEMA_POSTGRES__PORT=5432
          - SCHEMA_POSTGRES__DB=website
          - SCHEMA_POSTGRES__USERNAME=website
          - SCHEMA_POSTGRES__PASSWORD=postgres
          - SCHEMA_POSTGRES_SSL_MODE=disable
        depends_on:
        - postgres
        networks:
        - og-network
        restart: always
    postgres:
        image: postgres:14
        container_name: postgres
        volumes:
          - pgdata:/var/lib/postgresql/data
        ports:
        - "5432:5432"
        environment:
        - POSTGRES_USER=website
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=website
        networks:
        - og-network
        restart: always
    ui: #Define the client service so we can run it in an isolated environment.
     stdin_open: true
     container_name : ui
     ports:
        - "3000:3000"
     build:
       context: .
       dockerfile: ui/Dockerfile #The client service requires a docker file to be specified. For development, weâ€™re going to use the Dockerfile.dev file.
  
volumes:
    pgdata:

networks:
    og-network:
        driver: bridge